* {
  font-family: serif;
  box-sizing: border-box;
  /* make the font family united sarif*/
}
body{
  display: flex;
  align-items: center;
  flex-direction: column;
}
div {
  display: block;
}
nav{
  align-self: stretch;
  background-color: blue;
}
nav a {
  color: #fff;
  padding: 1rem;
}
aside p {
  margin: 0;
  text-align: center;
}
nav ul {
  list-style-type: none;
  display: flex;
  justify-content: space-around;
  margin: 0;
  padding: .5rem;
  margin-bottom: 0;
}
h1 {
  font-size: 4rem;
  font-weight: 800;
}
p {
  margin: 0 0 1em;
}

nav li a {
  display: block;
  color: #fff;
  text-decoration: none;
  cursor: pointer;
  position: relative;
  
  /* margin will keep the underlines from merging together if spacing is tight */
  margin: 0 .5rem;
  /* the padding determines how far the border is below the content*/
  padding: 1rem;
  font-size: 1.75rem;
  white-space: nowrap;
  user-select: none;
  
/*   border: 1px solid blue; */
}
nav a::after {
  content: "";
  height: 3px;
  background-color: white;
  
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  transform: scaleX(0);
  
  transition: transform 200ms ease;
  transform-origin: right;
}
nav a:hover::after {
  transform: scaleX(1);
  transform-origin: left;
  transition: transform 600ms ease;
}
.hero h1 {
  color: rgb(0,63,162);
  margin: 0;
}
.hero p{
  color: white;
  font-size: 1.5rem;
}
img {
  display: block;
  width: 100%;
  height: auto;
}
.hero {
  position: relative;
  align-self: stretch;
  padding-bottom: 10%;
}
.hero .overlay {
  background: linear-gradient(to bottom, rgba(0,0,0,.5),transparent 80%);
}
.overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.hero .text-wrapper{
  /* border: 1px solid red; */
  display: flex;
  justify-content: center;
  align-items: center;
} 
.hero .tex-para{
  /* border: 1px solid blue; */
  display: flex;
  justify-content: center;
  
  align-items: flex-end;
}

.cards {
  display: flex;
  gap: 2rem; 
  flex-direction: column;
  margin: 12rem 1.5rem 0 1.5rem;
}
.card {
  position: relative;
}
.image-cards img
{
  height: 100%;
  object-fit: cover;
  
  aspect-ratio: 4 / 3;
}
a {
  cursor: pointer;
}
.card .overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;

  opacity: 0;

  transition: opacity 300ms ease;
}
.cards .overlay p {
  margin: 0;
  padding: 0.5rem;
  color: gray;
  font-size: 2rem;
  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);
}
.card:hover .overlay {
  opacity: 1;
}

.cards .overlay span {
  display: block;
  text-align: center;
  font-size: 3rem;
}

.cards .overlay:hover {
  opacity: 1;
}
/* article */
article {
  display: flex;
  margin-bottom: 1rem;
  justify-content: center;
}
/* aside */
aside {
  background-color: blue;
  color: #fff;
  font-size: 3rem;
  padding: 1rem;
  margin-bottom: 1rem;
  align-self: stretch;
}

aside p {
  margin: 0;
  text-align: center;
  /* ???????   */
  /*     width: 100%; */
}
/* loader */
.loader {
  display: inline-block;
  width: 80px;
  height: 80px;
}
.loader:after {
  content: " ";
  display: block;
  width: 64px;
  height: 64px;
  margin: 8px;
  border-radius: 50%;
  border: 6px solid #fff;
  border-color: #fff transparent #fff transparent;
  animation: loader 1.2s linear infinite;
}
/* panel Class */
/**** mobile first styles ****/
.panel {
  display: flex;
  flex-direction: column;
}

.panel > .image-wrapper {
  /* make sure the image is dispalyed first   */
  order: -1;
}

/* I picked an arbitrary breakpoint for "wider than mobile" */
@media (min-width: 600px) {
  .panel {
    flex-direction: row;
    gap: 2rem;
  }

  /* use flex-basis (third value in the flex property) to proportionally size the text and image   */
  .panel > .text-content {
    flex: 1 1 60%;
  }

  .panel > .image-wrapper {
    flex: 1 1 40%;
    /* reset the order from mobile view */
    order: 0;
  }

  /* remove the default margin on the h2 so the text aligns with the top of the image  */
  .panel h2 {
    margin-top: 0;
  }

  /* display the flex-item with class left first  */
  .panel .left {
    order: -1;
  }
}

@keyframes loader {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@media (min-width: 500px) {
  .cards {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .cards {
    flex: 1 1 40%; /* grow shrink basis */
  }
}

@media (min-width: 900px) {
  .cards {
    flex-wrap: nowrap;
  }

  .cards {
    flex: 1 1 20%;
  }
}